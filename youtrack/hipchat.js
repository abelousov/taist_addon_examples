// Generated by CoffeeScript 1.8.0
(function() {
  var createAddonInterface, createContainer, entryPoint, getCompanyKey, linkServices, makePanelInactive, onSettingsLoaded, services, start, taistApi;
  taistApi = null;
  entryPoint = null;
  services = null;
  makePanelInactive = function(panel) {
    return $(panel).removeClass('jt-panel-active').addClass('jt-panel-inactive');
  };
  getCompanyKey = function() {
    return location.host;
  };
  linkServices = function() {
    return taistApi.services.link({
      source: {
        name: 'youtrack',
        settings: services.settings.youtrack
      },
      target: {
        name: 'hipchat',
        settings: services.settings.hipchat
      },
      converter: function(record) {
        var key, updates, val, _ref;
        updates = [];
        _ref = record.change;
        for (key in _ref) {
          val = _ref[key];
          updates.push("" + key + ": " + val["new"]);
        }
        console.log('converter', updates);
        return '#' + record.id + ' ' + updates.join();
      }
    }, function(a, b) {
      return console.log(a, b);
    });
  };
  createContainer = function() {
    var hintsPanel, hintsTab, hipChatPanel, hipChatTab;
    hintsPanel = $('.jt-tabpanel-content>div:last');
    hipChatPanel = hintsPanel.clone().empty();
    hipChatPanel.appendTo(hintsPanel.parent());
    makePanelInactive(hipChatPanel);
    hintsTab = $('.jt-tabpanel-navigation .jt-tabpanel-item:last');
    hipChatTab = hintsTab.clone().attr('title', 'HipChat').attr('tabid', 'HipChat').removeClass('jt-panel-active').appendTo(hintsTab.parent()).click(function() {
      var elem, _i, _len, _ref, _results;
      _ref = $('.jt-panel-active');
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        elem = _ref[_i];
        makePanelInactive(elem);
        $(this).addClass('jt-panel-active');
        _results.push(hipChatPanel.addClass('jt-panel-active'));
      }
      return _results;
    });
    $('.jt-tabpanel-item').click(function() {
      if (this !== hipChatTab[0]) {
        makePanelInactive(hipChatPanel);
        return makePanelInactive(hipChatTab);
      }
    });
    hipChatTab.find('div div').text('HipChat');
    return hipChatPanel;
  };
  createAddonInterface = function() {
    var div, elem, fields, hipChatPanel, _i, _len;
    hipChatPanel = createContainer();
    $('<h2>').text('HipChat Integration').appendTo(hipChatPanel);
    fields = [
      {
        name: 'youtrack.serverName',
        note: 'Имя сервера (YouTrack)',
        type: 'text'
      }
    ];
    for (_i = 0, _len = fields.length; _i < _len; _i++) {
      elem = fields[_i];
      div = $('<div>');
      switch (elem.type) {
        case 'text':
          $('<span>').addClass('taistLabel').text(elem.note).appendTo(div);
          $('<input>').attr('type', 'text').attr('name', elem.name).appendTo(div);
      }
      div.appendTo(hipChatPanel);
    }
    return $('<button>').text('RUN').appendTo(hipChatPanel).click(function() {
      return linkServices();
    });
  };
  onSettingsLoaded = function() {
    return createAddonInterface();
  };
  start = function(_taistApi, _entryPoint) {
    taistApi = _taistApi;
    entryPoint = _entryPoint;
    taistApi.companyData.setCompanyKey(getCompanyKey());
    return taistApi.companyData.get('settings', function(error, settings) {
      var defs;
      defs = {
        youtrack: {
          serverName: 'taist',
          login: 'antonbelousov',
          password: '@00x*psM0$5^',
          projectId: 'SH'
        },
        hipchat: {
          authToken: 'BGyWsdFa6mnfToP0isAUebV31534pPZ0OKzqI9vi'
        }
      };
      services = {
        settings: $.extend({}, defs, settings)
      };
      return onSettingsLoaded();
    });
  };
  return {
    start: start
  };
});
