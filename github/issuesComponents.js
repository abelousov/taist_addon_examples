// Generated by CoffeeScript 1.7.1
(function() {
  var settingsPage, start, storage, utils;
  utils = null;
  start = function(utilities, entryPoint) {
    utils = utilities;
    storage.init();
    switch (entryPoint) {
      case 'settings':
        return settingsPage.render();
    }
  };
  settingsPage = {
    render: function() {
      return utils.wait.elementRender('.menu', (function(_this) {
        return function(menuContainer) {
          return _this._appendComponentsLink(menuContainer);
        };
      })(this));
    },
    _appendComponentsLink: function(menuContainer) {
      var componentsLink;
      componentsLink = $('<a href=\'components\'>Components</a>');
      menuContainer.append(($('<li></li>')).append(componentsLink));
      return componentsLink.click((function(_this) {
        return function(e) {
          _this._formatLinkAsSelected(componentsLink);
          _this._renderComponentsEditor();
          return false;
        };
      })(this));
    },
    _formatLinkAsSelected: function(componentsLink) {
      var currentSelectedLink, property, selPropertyValue, selectedFormatProperties, _i, _len, _results;
      selectedFormatProperties = ['font-weight', 'border-left', 'color'];
      currentSelectedLink = $('.js-selected-navigation-item.selected');
      _results = [];
      for (_i = 0, _len = selectedFormatProperties.length; _i < _len; _i++) {
        property = selectedFormatProperties[_i];
        selPropertyValue = currentSelectedLink.css(property);
        currentSelectedLink.css(property, componentsLink.css(property));
        _results.push(componentsLink.css(property, selPropertyValue));
      }
      return _results;
    },
    _renderComponentsEditor: function() {
      var container, contentsTextArea, saveButton;
      container = $('.repo-settings-content');
      container.html(this._editorTemplate);
      contentsTextArea = container.find('textarea');
      saveButton = container.find('button');
      storage.get(function(componentsData) {
        return contentsTextArea.val(componentsData);
      });
      return saveButton.click((function(_this) {
        return function(e) {
          e.preventDefault();
          return _this._saveComponentsData(container, contentsTextArea);
        };
      })(this));
    },
    _saveComponentsData: function(container, contentsTextArea) {
      var componentsJSON, correctData, newComponentsData;
      newComponentsData = contentsTextArea.val();
      correctData = true;
      try {
        componentsJSON = JSON.parse(newComponentsData);
        console.log('parsed: ', componentsJSON);
      } catch (_error) {
        correctData = false;
      }
      if (!correctData) {
        this._displaySaveResult(container, false, 'components data should be a valid JSON containing component ids and names and accounts of people responsible for them. Show <a id="componentsJsonExample" href="#">example</a>');
        return this._renderJsonExample(container, contentsTextArea);
      } else {
        return storage.set(componentsJSON, (function(_this) {
          return function(err) {
            return _this._displaySaveResult(container, err == null, err != null ? err.message : void 0);
          };
        })(this));
      }
    },
    _displaySaveResult: function(container, isSuccessful, message) {
      var color, text, _ref;
      _ref = isSuccessful ? ['Saved successfully', 'green'] : ['Error', 'red'], text = _ref[0], color = _ref[1];
      (container.find('#resultType')).css('color', color).text(text);
      if (message != null) {
        return (container.find('#resultContents')).html(': ' + message);
      }
    },
    _renderJsonExample: function(container, contentsTextArea) {
      return (container.find('#componentsJsonExample')).click(function(e) {
        var example;
        e.preventDefault();
        example = '{\n  "1": {\n    "name": "Authorization",\n    "responsible": "fortnox"\n  },\n\n  "2": {\n    "name": "User manual",\n    "resonsible": "docsguru"\n  }\n}';
        return contentsTextArea.val(("=== Example:\n " + example + " \n=== End of example\n\n") + contentsTextArea.val());
      });
    },
    _editorTemplate: '<div class="tab-content"> <div class="boxed-group"> <h3>Edit components</h3> <div class="boxed-group-inner"> <textarea rows="20" style="width: 100%; margin: 10px 0;"></textarea> <button type="submit" class="button primary" style="margin-right: 10px;margin-bottom: 10px;">Save</button><span id="resultType"></span><span id="resultContents"></span> </div> </div> </div>'
  };
  storage = {
    _componentContentsKey: "components",
    _getOwnerAndRepo: function() {
      return location.pathname.match(new RegExp('^/(\\w+/\\w+)'))[1];
    },
    init: function() {
      return utils.companyData.setCompanyKey(this._getOwnerAndRepo());
    },
    get: function(callback) {
      return utils.companyData.get(this._componentContentsKey, function(err, res) {
        if (err == null) {
          return callback(res);
        }
      });
    },
    set: function(newValue, callback) {
      return utils.companyData.set(this._componentContentsKey, newValue, function(err) {
        return callback(err);
      });
    }
  };
  return {
    start: start
  };
});
